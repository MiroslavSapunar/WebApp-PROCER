version: "3"
services:
  web:
    container_name: ProcerApp
    image: node:18.18-alpine3.17
    restart: unless-stopped
    working_dir: /usr/src/app
    command: sh -c "yarn install && yarn run dev"
    env_file: .env
    environment:
      NEXT_TELEMETRY_DISABLED: ${NEXT_TELEMETRY_DISABLED}
      PORT: ${NEXT_PORT}
    volumes:
      - ./web:/usr/src/app
    ports:
      - "3000:3000"
    networks:
      - procer
    depends_on:
      - strapi

  strapi:
    container_name: ProcerCMS
    build: ./strapi
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi:/opt/app
      - ./data_strapi:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - procer
    depends_on:
      - strapiDB

  strapiDB:
    container_name: ProcerDB
    restart: unless-stopped
    env_file: .env
    image: postgres:14.9-alpine3.17
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      # - strapi-data:/var/lib/postgresql/data/ #using a volume
      - ./db:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - procer

networks: 
  procer:
    name: ProcerWeb
    driver: bridge
